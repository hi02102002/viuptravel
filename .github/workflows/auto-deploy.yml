name:  Auto Build & Deploy
on:
  push:
    branches:
      - "main"
jobs:
  build-check:
    runs-on: ubuntu-latest
    steps:
        - name: Checking if ready to build
          run: |
            COMMIT_MSG=$(git log -1 --pretty=%B)
            echo "Commit message: $COMMIT_MSG"
            if [[ "$COMMIT_MSG" == *"[deploy]"* ]]; then
              echo '✅ Ready to build'
            else
              echo '🚫 Not a deploy commit'
              exit 1
            fi

  build-push:
    needs: build-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        id: docker_build_server
        with:
          context: .
          file: ./Dockerfile.prod
          builder: ${{steps.buildx.outputs.name}}
          push: true
          tags: hoanghuydev/viuptravel:latest
          build-args: |
            DOTENV_PRIVATE_KEY_PRODUCTION=${{ secrets.DOTENV_PRIVATE_KEY_PRODUCTION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Verify
        run: |
          echo ${{ steps.docker_build_server.outputs.digest }}
          echo '✅ Build completed'

  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: SSH Deploy to Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "🎬 Starting deployment..."
            sudo mkdir -p ~/apps/viuptravel
            cd ~/apps/viuptravel
            echo "📁 Current directory: $(pwd)"
            echo "📦 Pulling latest Docker image..."
            sudo  docker compose -f ./docker-compose.prod.yml pull
            echo "🔁 Recreating containers..."
             sudo docker compose -f ./docker-compose.prod.yml up -d --force-recreate
            echo "🧹 Cleaning up unused Docker resources..."
            sudo docker system prune -f
            echo "🎉 Deployment completed successfully!"
            